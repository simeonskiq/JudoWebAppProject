@using JudoApp.Data.Models
@model List<CartItem>

@* Include anti-forgery token *@
@Html.AntiForgeryToken()

<div class="container">
    <h2>Shopping Cart</h2>

    @if (Model.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.ProductName</td>
                        <td>@item.Price.ToString("C")</td>
                        <td>
                            <!-- Minus button -->
                            <button type="button" class="btn btn-sm btn-secondary change-quantity"
                                    data-productid="@item.ProductId" data-change="-1">
                                -
                            </button>
                            <!-- Quantity display -->
                            <span id="quantity-@item.ProductId" class="mx-2">@item.Quantity</span>
                            <!-- Plus button -->
                            <button type="button" class="btn btn-sm btn-secondary change-quantity"
                                    data-productid="@item.ProductId" data-change="1">
                                +
                            </button>
                        </td>
                        <td>
                            <form asp-action="RemoveFromCart" method="post" class="d-inline">
                                <input type="hidden" name="productId" value="@item.ProductId" />
                                <button type="submit" class="btn btn-sm btn-danger">Remove</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="3" class="text-right"><strong>Total:</strong></td>
                    <td id="cart-total"><strong>@Model.Sum(i => i.Total).ToString("C")</strong></td>
                    <td>
                        <form asp-action="ClearCart" method="post" class="d-inline">
                            <button type="submit" class="btn btn-warning">Clear Cart</button>
                        </form>
                    </td>
                </tr>
            </tfoot>
        </table>
    }
    else
    {
        <p>Your cart is empty.</p>
    }

    <div class="mt-3">
        <a asp-controller="Product" asp-action="Index" class="btn btn-primary">Continue Shopping</a>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.change-quantity').click(function () {
                var btn = $(this);
                var productId = btn.data('productid');
                var change = parseInt(btn.data('change'));
                var quantitySpan = $('#quantity-' + productId);
                var currentQuantity = parseInt(quantitySpan.text());
                var newQuantity = currentQuantity + change;

                // Prevent quantity from dropping below 1
                if (newQuantity < 1) {
                    newQuantity = 1;
                }

                // Debug: log the new quantity being sent
                console.log("Updating product " + productId + " to quantity " + newQuantity);

                $.ajax({
                    url: '@Url.Action("UpdateQuantity", "Cart")',
                    type: 'POST',
                    data: {
                        productId: productId,
                        quantity: newQuantity,
                        // Include anti-forgery token if required
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        console.log("Response received:", response);
                        if (response.success) {
                            // Update the quantity display
                            quantitySpan.text(newQuantity);
                            // Update the item total display
                            $('#item-total-' + productId).text(
                                response.itemTotal.toLocaleString('en-US', { style: 'currency', currency: 'BGN' })
                            );
                            // Update the overall cart total
                            $('#cart-total strong').text(
                                response.cartTotal.toLocaleString('en-US', { style: 'currency', currency: 'BGN' })
                            );
                        } else {
                            console.error("Update unsuccessful");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error:", error);
                    }
                });
            });
        });
    </script>
}
